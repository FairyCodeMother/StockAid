# For execjs to work without using the ruby racer gem
package "nodejs"

rvm_binary = File.join(node[:stockaid][:home], ".rvm/bin/rvm")
rvm_environment = {
  "USER" => node[:stockaid][:user],
  "HOME" => node[:stockaid][:home],
  "TERM" => "dumb",
  "RAILS_ENV" => "production"
}

execute "install-bundler" do
  command "#{rvm_binary} in '#{node[:stockaid][:repo_dir]}' do gem install bundler --no-ri --no-rdoc"
  user node[:stockaid][:user]
  group node[:stockaid][:group]
  cwd node[:stockaid][:repo_dir]
  not_if "#{rvm_binary} in '#{node[:stockaid][:repo_dir]}' do gem list | grep ^bundler\\\\s", user: node[:stockaid][:user], environment: rvm_environment
end

execute "bundle-install" do
  command "#{rvm_binary} in '#{node[:stockaid][:repo_dir]}' do bundle install --frozen --with production"
  user node[:stockaid][:user]
  group node[:stockaid][:group]
  cwd node[:stockaid][:repo_dir]
  not_if "#{rvm_binary} in '#{node[:stockaid][:repo_dir]}' do bundle check", user: node[:stockaid][:user], environment: rvm_environment
  notifies :run, "execute[reload-nginx]"
end

require "securerandom"
secret_key_base_file = File.join(node[:stockaid][:dir], ".stockaid-secret-key-base")

file secret_key_base_file do
  content SecureRandom.hex(64)
  user node[:stockaid][:user]
  group node[:stockaid][:group]
  mode "0600"
  action :create_if_missing
end

devise_pepper_file = File.join(node[:stockaid][:dir], ".stockaid-devise-pepper")

file devise_pepper_file do
  content SecureRandom.hex(64)
  user node[:stockaid][:user]
  group node[:stockaid][:group]
  mode "0600"
  action :create_if_missing
end

database_password_file = File.join(node[:stockaid][:dir], ".stockaid-db-password")

file File.join(node[:stockaid][:repo_dir], ".ruby-env") do
  content lazy {
    secret_key_base = File.read(secret_key_base_file).strip
    devise_pepper = File.read(devise_pepper_file).strip
    db_password = File.read(database_password_file).strip

    "# This file is generated by Chef
RAILS_ENV=production
STOCKAID_SECRET_KEY_BASE=#{secret_key_base}
STOCKAID_DEVISE_PEPPER=#{devise_pepper}
STOCKAID_DATABASE_HOST=localhost
STOCKAID_DATABASE_USERNAME=stockaid
STOCKAID_DATABASE_PASSWORD=#{db_password}
STOCKAID_ENV_SETUP=3"
  }
end

asset_check_path = File.join(node[:stockaid][:dir], ".stockaid-assets-precompiled")

execute "rake-assets-precompile" do
  command "#{rvm_binary} in '#{node[:stockaid][:repo_dir]}' do rake assets:precompile && git log -1 --format=format:%H%n >> '#{asset_check_path}'"
  user node[:stockaid][:user]
  group node[:stockaid][:group]
  cwd node[:stockaid][:repo_dir]
  not_if { File.exist?(asset_check_path) && File.read(asset_check_path)[`cd '#{node[:stockaid][:repo_dir]}' && git log -1 --format=format:%H`] }
  notifies :run, "execute[reload-nginx]"
end

execute "rake-db-migrate" do
  command "#{rvm_binary} in '#{node[:stockaid][:repo_dir]}' do bundle exec rake db:migrate"
  user node[:stockaid][:user]
  group node[:stockaid][:group]
  cwd node[:stockaid][:repo_dir]
  not_if "#{rvm_binary} in '#{node[:stockaid][:repo_dir]}' do bundle exec rake db:abort_if_pending_migrations", user: node[:stockaid][:user], environment: rvm_environment
end
